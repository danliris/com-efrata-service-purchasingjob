// <auto-generated />
using Com.DanLiris.Service.Purchasing.Lib;
using Com.DanLiris.Service.Purchasing.Lib.Enums;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Com.DanLiris.Service.Purchasing.Lib.Migrations
{
    [DbContext(typeof(PurchasingDbContext))]
    [Migration("20181010071605_Edit_GarmentPurchaseRequestItem")]
    partial class Edit_GarmentPurchaseRequestItem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.BankDocumentNumber.BankDocumentNumber", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("BankCode")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("LastDocumentNumber");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Type")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("BankDocumentNumbers");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.BankExpenditureNoteModel.BankExpenditureNoteDetailModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("BankExpenditureNoteId");

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("Currency")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("DueDate");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(255);

                    b.Property<double>("TotalPaid");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("UPODate");

                    b.Property<long>("UnitPaymentOrderId");

                    b.Property<string>("UnitPaymentOrderNo")
                        .HasMaxLength(255);

                    b.Property<double>("Vat");

                    b.HasKey("Id");

                    b.HasIndex("BankExpenditureNoteId");

                    b.ToTable("BankExpenditureNoteDetails");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.BankExpenditureNoteModel.BankExpenditureNoteItemModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<long>("BankExpenditureNoteDetailId");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Price");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(255);

                    b.Property<double>("Quantity");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.Property<long>("UnitPaymentOrderItemId");

                    b.Property<string>("Uom")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("BankExpenditureNoteDetailId");

                    b.ToTable("BankExpenditureNoteItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.BankExpenditureNoteModel.BankExpenditureNoteModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("BGCheckNumber")
                        .HasMaxLength(255);

                    b.Property<string>("BankAccountName")
                        .HasMaxLength(255);

                    b.Property<string>("BankAccountNumber")
                        .HasMaxLength(255);

                    b.Property<string>("BankCode")
                        .HasMaxLength(255);

                    b.Property<string>("BankCurrencyCode")
                        .HasMaxLength(255);

                    b.Property<string>("BankCurrencyId")
                        .HasMaxLength(255);

                    b.Property<string>("BankCurrencyRate")
                        .HasMaxLength(255);

                    b.Property<string>("BankId")
                        .HasMaxLength(255);

                    b.Property<string>("BankName");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(255);

                    b.Property<double>("GrandTotal");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<bool>("SupplierImport");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(255);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("BankExpenditureNotes");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.DailyBankTransaction.DailyBankTransactionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountBankAccountName")
                        .HasMaxLength(100);

                    b.Property<string>("AccountBankAccountNumber")
                        .HasMaxLength(100);

                    b.Property<string>("AccountBankCode")
                        .HasMaxLength(25);

                    b.Property<string>("AccountBankCurrencyCode")
                        .HasMaxLength(100);

                    b.Property<string>("AccountBankCurrencyId")
                        .HasMaxLength(50);

                    b.Property<string>("AccountBankCurrencySymbol")
                        .HasMaxLength(100);

                    b.Property<string>("AccountBankId")
                        .HasMaxLength(50);

                    b.Property<string>("AccountBankName")
                        .HasMaxLength(100);

                    b.Property<bool>("Active");

                    b.Property<double>("AfterNominal");

                    b.Property<double>("BeforeNominal");

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(25);

                    b.Property<string>("BuyerId")
                        .HasMaxLength(50);

                    b.Property<string>("BuyerName")
                        .HasMaxLength(150);

                    b.Property<string>("Code")
                        .HasMaxLength(25);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Nominal");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(50);

                    b.Property<string>("ReferenceType")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasMaxLength(500);

                    b.Property<string>("SourceType")
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(100);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(50);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("DailyBankTransactions");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.DeliveryOrderModel.DeliveryOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("ArrivalDate");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("DODate");

                    b.Property<string>("DONo")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsClosed");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Remark");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("DeliveryOrders");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.DeliveryOrderModel.DeliveryOrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("DOItemId");

                    b.Property<double>("DOQuantity");

                    b.Property<double>("DealQuantity");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPODetailId");

                    b.Property<bool>("IsClosed");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POItemId");

                    b.Property<long>("PRId");

                    b.Property<long>("PRItemId");

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<string>("ProductRemark");

                    b.Property<double>("ReceiptQuantity");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UomId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("DOItemId");

                    b.ToTable("DeliveryOrderDetails");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.DeliveryOrderModel.DeliveryOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("DOId");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPOId");

                    b.Property<string>("EPONo")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("DOId");

                    b.ToTable("DeliveryOrderItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PPHBankExpenditureNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("BGNo");

                    b.Property<string>("BankAccountName");

                    b.Property<string>("BankAccountNumber");

                    b.Property<string>("BankCode");

                    b.Property<string>("BankId");

                    b.Property<string>("BankName");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("Currency");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("IncomeTaxId");

                    b.Property<string>("IncomeTaxName");

                    b.Property<double>("IncomeTaxRate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("No");

                    b.Property<double>("TotalDPP");

                    b.Property<double>("TotalIncomeTax");

                    b.HasKey("Id");

                    b.ToTable("PPHBankExpenditureNotes");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PPHBankExpenditureNoteItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("PPHBankExpenditureNoteId");

                    b.Property<int>("PurchasingDocumentExpeditionId");

                    b.Property<string>("UnitPaymentOrderNo");

                    b.HasKey("Id");

                    b.HasIndex("PPHBankExpenditureNoteId");

                    b.HasIndex("PurchasingDocumentExpeditionId");

                    b.ToTable("PPHBankExpenditureNoteItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PurchasingDocumentExpedition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AccountingDivisionBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("AccountingDivisionDate");

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset?>("BankExpenditureNoteDate");

                    b.Property<string>("BankExpenditureNoteNo")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("BankExpenditureNotePPHDate");

                    b.Property<string>("BankExpenditureNotePPHNo");

                    b.Property<string>("CashierDivisionBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("CashierDivisionDate");

                    b.Property<string>("CategoryCode");

                    b.Property<string>("CategoryName");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("Currency")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("DueDate");

                    b.Property<double>("IncomeTax");

                    b.Property<string>("IncomeTaxId");

                    b.Property<string>("IncomeTaxName");

                    b.Property<double>("IncomeTaxRate");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPaid");

                    b.Property<bool>("IsPaidPPH");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("NotVerifiedReason")
                        .HasMaxLength(255);

                    b.Property<string>("PaymentMethod");

                    b.Property<int>("Position");

                    b.Property<string>("SendToAccountingDivisionBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("SendToAccountingDivisionDate");

                    b.Property<string>("SendToCashierDivisionBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("SendToCashierDivisionDate");

                    b.Property<string>("SendToPurchasingDivisionBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("SendToPurchasingDivisionDate");

                    b.Property<string>("SendToVerificationDivisionBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("SendToVerificationDivisionDate");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(255);

                    b.Property<double>("TotalPaid");

                    b.Property<DateTimeOffset>("UPODate");

                    b.Property<string>("UnitPaymentOrderNo")
                        .HasMaxLength(255);

                    b.Property<double>("Vat");

                    b.Property<string>("VerificationDivisionBy")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset?>("VerificationDivisionDate");

                    b.Property<DateTimeOffset?>("VerifyDate");

                    b.HasKey("Id");

                    b.ToTable("PurchasingDocumentExpeditions");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PurchasingDocumentExpeditionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Price");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<int>("PurchasingDocumentExpeditionId");

                    b.Property<double>("Quantity");

                    b.Property<string>("UnitCode");

                    b.Property<string>("UnitId");

                    b.Property<string>("UnitName");

                    b.Property<string>("Uom");

                    b.HasKey("Id");

                    b.HasIndex("PurchasingDocumentExpeditionId");

                    b.ToTable("PurchasingDocumentExpeditionItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.ExternalPurchaseOrderModel.ExternalPurchaseOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<string>("CurrencyId")
                        .HasMaxLength(255);

                    b.Property<double>("CurrencyRate")
                        .HasMaxLength(1000);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DeliveryDate");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionId")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(1000);

                    b.Property<string>("EPONo")
                        .HasMaxLength(255);

                    b.Property<string>("FreightCostBy");

                    b.Property<string>("IncomeTaxId")
                        .HasMaxLength(255);

                    b.Property<string>("IncomeTaxName")
                        .HasMaxLength(255);

                    b.Property<string>("IncomeTaxRate")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsCanceled");

                    b.Property<bool>("IsClosed");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<DateTimeOffset>("OrderDate");

                    b.Property<string>("PaymentDueDays");

                    b.Property<string>("PaymentMethod");

                    b.Property<string>("Remark");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(1000);

                    b.Property<bool>("UseIncomeTax");

                    b.Property<bool>("UseVat");

                    b.HasKey("Id");

                    b.ToTable("ExternalPurchaseOrders");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.ExternalPurchaseOrderModel.ExternalPurchaseOrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<double>("Conversion");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double>("DOQuantity");

                    b.Property<double>("DealQuantity");

                    b.Property<string>("DealUomId");

                    b.Property<string>("DealUomUnit");

                    b.Property<double>("DefaultQuantity");

                    b.Property<string>("DefaultUomId");

                    b.Property<string>("DefaultUomUnit");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPOItemId");

                    b.Property<bool>("IncludePpn");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POItemId");

                    b.Property<long>("PRItemId");

                    b.Property<double>("PriceBeforeTax");

                    b.Property<double>("PricePerDealUnit");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(4000);

                    b.Property<string>("ProductRemark");

                    b.Property<double>("ReceiptQuantity");

                    b.HasKey("Id");

                    b.HasIndex("EPOItemId");

                    b.ToTable("ExternalPurchaseOrderDetails");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.ExternalPurchaseOrderModel.ExternalPurchaseOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPOId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POId");

                    b.Property<string>("PONo")
                        .HasMaxLength(255);

                    b.Property<long>("PRId");

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("EPOId");

                    b.ToTable("ExternalPurchaseOrderItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentPurchaseRequestModel.GarmentPurchaseRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("Article")
                        .HasMaxLength(255);

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(255);

                    b.Property<string>("BuyerId")
                        .HasMaxLength(255);

                    b.Property<string>("BuyerName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset?>("ExpectedDeliveryDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<bool>("IsUsed");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<string>("RONo");

                    b.Property<string>("Remark");

                    b.Property<DateTimeOffset>("ShipmentDate");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("GarmentPurchaseRequests");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentPurchaseRequestModel.GarmentPurchaseRequestItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<double>("BudgetPrice");

                    b.Property<string>("CategoryId")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("GarmentPRId");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsUsed");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PO_SerialNumber")
                        .HasMaxLength(255);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<string>("ProductRemark");

                    b.Property<double>("Quantity");

                    b.Property<string>("Status");

                    b.Property<string>("UomId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("GarmentPRId");

                    b.ToTable("GarmentPurchaseRequestItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.InternalPurchaseOrderModel.InternalPurchaseOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("BudgetCode")
                        .HasMaxLength(255);

                    b.Property<string>("BudgetId")
                        .HasMaxLength(255);

                    b.Property<string>("BudgetName")
                        .HasMaxLength(1000);

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryId")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionId")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset>("ExpectedDeliveryDate");

                    b.Property<bool>("IsClosed");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("IsoNo")
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PONo")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("PRDate");

                    b.Property<string>("PRId")
                        .HasMaxLength(255);

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<string>("Remark")
                        .HasMaxLength(255);

                    b.Property<string>("Status")
                        .HasMaxLength(255);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("InternalPurchaseOrders");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.InternalPurchaseOrderModel.InternalPurchaseOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POId");

                    b.Property<long>("PRItemId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(4000);

                    b.Property<string>("ProductRemark")
                        .HasMaxLength(1000);

                    b.Property<double>("Quantity");

                    b.Property<string>("Status")
                        .HasMaxLength(255);

                    b.Property<string>("UomId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("POId");

                    b.ToTable("InternalPurchaseOrderItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.PurchaseRequestModel.PurchaseRequest", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("BudgetCode")
                        .HasMaxLength(255);

                    b.Property<string>("BudgetId")
                        .HasMaxLength(255);

                    b.Property<string>("BudgetName")
                        .HasMaxLength(1000);

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryId")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionId")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset>("ExpectedDeliveryDate");

                    b.Property<bool>("Internal");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<bool>("IsUsed");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("No")
                        .HasMaxLength(255);

                    b.Property<string>("Remark");

                    b.Property<int>("Status");

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("PurchaseRequests");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.PurchaseRequestModel.PurchaseRequestItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(4000);

                    b.Property<long>("PurchaseRequestId");

                    b.Property<double>("Quantity");

                    b.Property<string>("Remark");

                    b.Property<string>("Status");

                    b.Property<string>("Uom")
                        .HasMaxLength(255);

                    b.Property<string>("UomId");

                    b.HasKey("Id");

                    b.HasIndex("PurchaseRequestId");

                    b.ToTable("PurchaseRequestItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentCorrectionNoteModel.UnitPaymentCorrectionNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryId")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset>("CorrectionDate");

                    b.Property<string>("CorrectionType");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionId")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset?>("DueDate");

                    b.Property<DateTimeOffset?>("IncomeTaxCorrectionDate");

                    b.Property<string>("IncomeTaxCorrectionNo");

                    b.Property<DateTimeOffset?>("InvoiceCorrectionDate");

                    b.Property<string>("InvoiceCorrectionNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("ReleaseOrderNoteNo");

                    b.Property<string>("Remark");

                    b.Property<string>("ReturNoteNo");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<string>("SupplierNpwp")
                        .HasMaxLength(100);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UPCNo");

                    b.Property<long>("UPOId");

                    b.Property<string>("UPONo");

                    b.Property<DateTimeOffset?>("VatTaxCorrectionDate");

                    b.Property<string>("VatTaxCorrectionNo");

                    b.Property<bool>("useIncomeTax");

                    b.Property<bool>("useVat");

                    b.HasKey("Id");

                    b.ToTable("UnitPaymentCorrectionNotes");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentCorrectionNoteModel.UnitPaymentCorrectionNoteItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode");

                    b.Property<string>("CurrencyId");

                    b.Property<string>("CurrencyRate");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("EPONo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("PRDetailId");

                    b.Property<long>("PRId");

                    b.Property<string>("PRNo");

                    b.Property<double>("PricePerDealUnitAfter");

                    b.Property<double>("PricePerDealUnitBefore");

                    b.Property<double>("PriceTotalAfter");

                    b.Property<double>("PriceTotalBefore");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<double>("Quantity");

                    b.Property<long>("UPCId");

                    b.Property<long>("UPODetailId");

                    b.Property<string>("URNNo");

                    b.Property<string>("UomId");

                    b.Property<string>("UomUnit");

                    b.HasKey("Id");

                    b.HasIndex("UPCId");

                    b.ToTable("UnitPaymentCorrectionNoteItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentOrderModel.UnitPaymentOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryId")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<string>("CurrencyDescription")
                        .HasMaxLength(1000);

                    b.Property<string>("CurrencyId")
                        .HasMaxLength(255);

                    b.Property<double>("CurrencyRate");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionId")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(1000);

                    b.Property<DateTimeOffset>("DueDate");

                    b.Property<DateTimeOffset?>("IncomeTaxDate");

                    b.Property<string>("IncomeTaxId")
                        .HasMaxLength(255);

                    b.Property<string>("IncomeTaxName")
                        .HasMaxLength(1000);

                    b.Property<string>("IncomeTaxNo")
                        .HasMaxLength(255);

                    b.Property<double>("IncomeTaxRate");

                    b.Property<DateTimeOffset>("InvoiceDate");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(255);

                    b.Property<bool>("IsCorrection");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPaid");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(255);

                    b.Property<string>("PibNo")
                        .HasMaxLength(255);

                    b.Property<string>("Remark");

                    b.Property<string>("SupplierAddress")
                        .HasMaxLength(1000);

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("UPONo")
                        .HasMaxLength(255);

                    b.Property<bool>("UseIncomeTax");

                    b.Property<bool>("UseVat");

                    b.Property<DateTimeOffset>("VatDate");

                    b.Property<string>("VatNo")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("UnitPaymentOrders");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentOrderModel.UnitPaymentOrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPODetailId");

                    b.Property<string>("EPONo")
                        .HasMaxLength(255);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("POItemId");

                    b.Property<long>("PRId");

                    b.Property<long>("PRItemId");

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<double>("PricePerDealUnit");

                    b.Property<double>("PricePerDealUnitCorrection");

                    b.Property<double>("PriceTotal");

                    b.Property<double>("PriceTotalCorrection");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(1000);

                    b.Property<string>("ProductRemark");

                    b.Property<double>("QuantityCorrection");

                    b.Property<double>("ReceiptQuantity");

                    b.Property<long>("UPOItemId");

                    b.Property<long>("URNItemId");

                    b.Property<string>("UomId")
                        .HasMaxLength(255);

                    b.Property<string>("UomUnit")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("UPOItemId");

                    b.ToTable("UnitPaymentOrderDetails");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentOrderModel.UnitPaymentOrderItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("DOId");

                    b.Property<string>("DONo")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("UPOId");

                    b.Property<long>("URNId");

                    b.Property<string>("URNNo")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("UPOId");

                    b.ToTable("UnitPaymentOrderItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitReceiptNoteModel.UnitReceiptNote", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("DOId");

                    b.Property<string>("DONo");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionId")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(1000);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPaid");

                    b.Property<bool>("IsStorage");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<DateTimeOffset>("ReceiptDate");

                    b.Property<string>("Remark");

                    b.Property<string>("StorageCode")
                        .HasMaxLength(255);

                    b.Property<string>("StorageId")
                        .HasMaxLength(255);

                    b.Property<string>("StorageName")
                        .HasMaxLength(1000);

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<string>("UId")
                        .HasMaxLength(255);

                    b.Property<string>("URNNo")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.ToTable("UnitReceiptNotes");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitReceiptNoteModel.UnitReceiptNoteItem", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<long>("DODetailId");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<long>("EPODetailId");

                    b.Property<bool>("IsCorrection");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<long>("PRId");

                    b.Property<long>("PRItemId");

                    b.Property<string>("PRNo")
                        .HasMaxLength(255);

                    b.Property<double>("PricePerDealUnit");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(255);

                    b.Property<string>("ProductName")
                        .HasMaxLength(4000);

                    b.Property<string>("ProductRemark");

                    b.Property<double>("ReceiptQuantity");

                    b.Property<long>("URNId");

                    b.Property<string>("Uom");

                    b.Property<string>("UomId");

                    b.HasKey("Id");

                    b.HasIndex("URNId");

                    b.ToTable("UnitReceiptNoteItems");
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.BankExpenditureNoteModel.BankExpenditureNoteDetailModel", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.BankExpenditureNoteModel.BankExpenditureNoteModel", "BankExpenditureNote")
                        .WithMany("Details")
                        .HasForeignKey("BankExpenditureNoteId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.BankExpenditureNoteModel.BankExpenditureNoteItemModel", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.BankExpenditureNoteModel.BankExpenditureNoteDetailModel", "BankExpenditureNoteDetail")
                        .WithMany("Items")
                        .HasForeignKey("BankExpenditureNoteDetailId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.DeliveryOrderModel.DeliveryOrderDetail", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.DeliveryOrderModel.DeliveryOrderItem", "DeliveryOrderItem")
                        .WithMany("Details")
                        .HasForeignKey("DOItemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.DeliveryOrderModel.DeliveryOrderItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.DeliveryOrderModel.DeliveryOrder", "DeliveryOrder")
                        .WithMany("Items")
                        .HasForeignKey("DOId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PPHBankExpenditureNoteItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PPHBankExpenditureNote", "PPHBankExpenditureNote")
                        .WithMany("Items")
                        .HasForeignKey("PPHBankExpenditureNoteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PurchasingDocumentExpedition", "PurchasingDocumentExpedition")
                        .WithMany()
                        .HasForeignKey("PurchasingDocumentExpeditionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PurchasingDocumentExpeditionItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.Expedition.PurchasingDocumentExpedition", "PurchasingDocumentExpedition")
                        .WithMany("Items")
                        .HasForeignKey("PurchasingDocumentExpeditionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.ExternalPurchaseOrderModel.ExternalPurchaseOrderDetail", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.ExternalPurchaseOrderModel.ExternalPurchaseOrderItem", "ExternalPurchaseOrderItem")
                        .WithMany("Details")
                        .HasForeignKey("EPOItemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.ExternalPurchaseOrderModel.ExternalPurchaseOrderItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.ExternalPurchaseOrderModel.ExternalPurchaseOrder", "ExternalPurchaseOrder")
                        .WithMany("Items")
                        .HasForeignKey("EPOId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentPurchaseRequestModel.GarmentPurchaseRequestItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.GarmentPurchaseRequestModel.GarmentPurchaseRequest", "GarmentPurchaseRequest")
                        .WithMany("Items")
                        .HasForeignKey("GarmentPRId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.InternalPurchaseOrderModel.InternalPurchaseOrderItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.InternalPurchaseOrderModel.InternalPurchaseOrder", "InternalPurchaseOrder")
                        .WithMany("Items")
                        .HasForeignKey("POId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.PurchaseRequestModel.PurchaseRequestItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.PurchaseRequestModel.PurchaseRequest", "PurchaseRequest")
                        .WithMany("Items")
                        .HasForeignKey("PurchaseRequestId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentCorrectionNoteModel.UnitPaymentCorrectionNoteItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentCorrectionNoteModel.UnitPaymentCorrectionNote", "UnitPaymentCorrectionNote")
                        .WithMany("Items")
                        .HasForeignKey("UPCId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentOrderModel.UnitPaymentOrderDetail", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentOrderModel.UnitPaymentOrderItem", "UnitPaymentOrderItem")
                        .WithMany("Details")
                        .HasForeignKey("UPOItemId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentOrderModel.UnitPaymentOrderItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.UnitPaymentOrderModel.UnitPaymentOrder", "UnitPaymentOrder")
                        .WithMany("Items")
                        .HasForeignKey("UPOId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Com.DanLiris.Service.Purchasing.Lib.Models.UnitReceiptNoteModel.UnitReceiptNoteItem", b =>
                {
                    b.HasOne("Com.DanLiris.Service.Purchasing.Lib.Models.UnitReceiptNoteModel.UnitReceiptNote", "UnitReceiptNote")
                        .WithMany("Items")
                        .HasForeignKey("URNId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
